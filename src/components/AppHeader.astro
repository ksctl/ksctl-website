---
import Container from "./Container.astro";
import StarButton from "./StarButton.astro";
const links = [
  {
    to: "https://docs.ksctl.com/",
    label: "Documentation",
  },
  {
    to: "https://docs.ksctl.com/docs/features/",
    label: "Features",
  },
  {
    to: "https://groups.google.com/g/ksctl",
    label: "Community",
  },
  {
    to: "https://github.com/ksctl/ksctl",
    label: "GitHub",
  }
];
---

<script>
  let isToggled = false;
  const navlinks = document.querySelector("#navlinks");
  const hamburger = document.querySelector("#hamburger");
  const layer = document.querySelector("#navLayer");
  const links = [...navlinks.querySelector("ul").children];

  function toggleNavlinks() {
    if (isToggled) {
      navlinks.classList.add(
        "!visible",
        "!scale-100",
        "!opacity-100",
        "!lg:translate-y-0"
      );
      hamburger.classList.add("toggled");
      layer.classList.add("origin-top", "scale-y-100");
    } else {
      navlinks.classList.remove(
        "!visible",
        "!scale-100",
        "!opacity-100",
        "!lg:translate-y-0"
      );
      hamburger.classList.remove("toggled");
      layer.classList.remove("origin-top", "scale-y-100");
    }
  }
  hamburger.addEventListener("click", () => {
    isToggled = !isToggled;
    toggleNavlinks();
  });

  links.forEach((link) => {
    link.addEventListener("click", () => {
      isToggled = !isToggled;
      toggleNavlinks();
    });
  });
</script>

<header>
  <nav
    class="fixed z-40 w-full border-b border-gray-200/20 backdrop-blur-lg bg-white/70 dark:bg-gray-900/80 dark:border-gray-800/30 transition-all duration-300"
  >
    <Container>
      <div
        class="relative flex flex-wrap items-center justify-between gap-6 py-3 md:gap-0 md:py-4"
      >
        <div class="relative z-20 flex w-full justify-between md:px-0 lg:w-max">
          <a href="/" aria-label="logo" class="flex items-center space-x-2.5 group">
              <img
                src="/ksctl-logo.svg"
                alt="ksctl logo"
                width="40"
                height="40"
              />
            <!-- <span class="text-xl font-bold text-gray-900 dark:text-white tracking-tight"
              >ksctl</span> -->
          </a>

          <div class="relative flex max-h-10 items-center lg:hidden">
            <button
              aria-label="humburger"
              id="hamburger"
              class="relative -mr-6 p-6"
            >
              <div
                aria-hidden="true"
                id="line"
                class="m-auto h-0.5 w-5 rounded bg-gray-700 transition duration-300 dark:bg-gray-300"
              >
              </div>
              <div
                aria-hidden="true"
                id="line2"
                class="m-auto mt-2 h-0.5 w-5 rounded bg-gray-700 transition duration-300 dark:bg-gray-300"
              >
              </div>
            </button>
          </div>
        </div>
        <div
          id="navLayer"
          aria-hidden="true"
          class="fixed inset-0 z-10 h-screen w-screen origin-bottom scale-y-0 bg-white/80 backdrop-blur-2xl transition duration-500 dark:bg-gray-900/90 lg:hidden"
        >
        </div>
        <div
          id="navlinks"
          class="w-max right-1 invisible absolute top-full z-20 origin-top-right translate-y-1 scale-90 flex-col flex-wrap justify-center gap-6 rounded-xl border border-gray-200 bg-white p-6 opacity-0 shadow-2xl shadow-gray-600/10 transition-all duration-300 dark:border-gray-700/50 dark:bg-gray-800/95 dark:shadow-none lg:visible lg:relative lg:flex lg:w-auto lg:translate-y-0 lg:scale-100 lg:flex-row lg:items-center lg:gap-0 lg:border-none lg:bg-transparent lg:p-0 lg:opacity-100 lg:shadow-none"
        >
          <div
            class="w-full text-gray-700 dark:text-gray-300 lg:w-auto lg:pr-4 lg:pt-0"
          >
            <ul
              class="flex flex-col gap-6 tracking-wide lg:flex-row lg:gap-0 lg:text-sm"
            >
              {
                links.map((link) => (
                  <li>
                    <a
                      href={link.to}
                      target={link.to.startsWith("http") ? "_blank" : undefined}
                      rel={link.to.startsWith("http") ? "noopener noreferrer" : undefined}
                      class="hover:text-primary block transition dark:hover:text-primary font-medium md:px-4"
                    >
                      <span>{link.label}</span>
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>

          <div class="mt-8 lg:mt-0 lg:ml-6">
            <StarButton />
          </div>
        </div>
      </div>
    </Container>
  </nav>
</header>

<style>
  #toggle_nav:checked ~ div #hamburger #line {
    @apply translate-y-1.5 rotate-45;
  }

  #toggle_nav:checked ~ div #hamburger #line2 {
    @apply -translate-y-1 -rotate-45;
  }

  .toggled div:first-child {
    @apply translate-y-1.5 rotate-45;
  }
  .toggled div:last-child {
    @apply -translate-y-1 -rotate-45;
  }
</style>
